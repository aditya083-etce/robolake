{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","user","index","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","console","log","state","fetch","responce","json","users","this","updatebots","filter","bot","toLowerCase","includes","length","type","placeholder","onChange","Component","ReactDOM","render","document","getElementById"],"mappings":"mLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCQCQ,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAErB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAMC,IAAM,OAAOC,IAAG,+BAA4BL,EAA5B,mBACtB,gCACI,6BAAKC,IACL,4BAAIC,WCaLI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACA,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAV,GAAMO,EAAOG,GAAOV,GACpBC,KAAQM,EAAOG,GAAOT,KACtBC,MAASK,EAAOG,GAAOR,OAHhBQ,SCCZC,EATA,SAACC,GACb,OACI,qBAAKC,MAAO,CAACC,UAAY,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YC6CHC,G,wDA3CX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IAaVO,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,QAC1CC,QAAQC,IAAIN,EAAMG,OAAOC,QAdzB,EAAKG,MAAQ,CACTpB,OAAQ,GACRe,YAAa,IAJF,E,qDAQnB,WAAqB,IAAD,OAChBM,MAAM,8CACDnC,MAAK,SAAAoC,GAAQ,OAAIA,EAASC,UAC1BrC,MAAK,SAAAsC,GAAK,OAAI,EAAKV,SAAS,CAAEd,OAAQwB,S,oBAQ/C,WACI,MAA8BC,KAAKL,MAA3BpB,EAAR,EAAQA,OAAOe,EAAf,EAAeA,YACTW,EAAa1B,EAAO2B,QAAO,SAAAC,GACjC,OAAOA,EAAIlC,KAAKmC,cAAcC,SAASf,EAAYc,kBAEnD,OAAQ7B,EAAO+B,OAGX,sBAAKnC,UAAY,KAAjB,UACI,oBAAIA,UAAY,KAAhB,uBACA,qBAAKA,UAAY,MAAjB,SACI,uBAAOA,UAAU,mCACjBoC,KAAK,SACLC,YAAY,cACZC,SAAUT,KAAKb,mBAEnB,cAAC,EAAD,UACI,cAAC,EAAD,CAAUZ,OAAQ0B,SAX9B,oBAAI9B,UAAY,KAAhB,4B,GA1BUuC,c,MCClBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDxD,M","file":"static/js/main.16caa6ec.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    // const {id, name, email} = props;\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img  alt = 'robo' src = {`https://robohash.org/${id}?size=200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return(\r\n    <div> \r\n        {\r\n            robots.map((user,index) => {\r\n                return (\r\n                    <Card \r\n                    key = {index} \r\n                    id = {robots[index].id} \r\n                    name = {robots[index].name} \r\n                    email = {robots[index].email}\r\n                    />\r\n                );\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n   return (\r\n       <div style={{overflowY : 'scroll', border: '2px solid black', height: '800px'}}>\r\n           {props.children}\r\n       </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n// import SearchBox from '../components/SearchBox';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(responce => responce.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { robots,searchfield} = this.state;\r\n        const updatebots = robots.filter(bot => {\r\n        return bot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ? \r\n        <h1 className = 'tc'>Loading...</h1> :\r\n        (\r\n            <div className = 'tc' >\r\n                <h1 className = 'f2'>Robo Lake</h1>\r\n                <div className = 'pd2'>\r\n                    <input className='pa3 ba b--green bg-lightest-blue' \r\n                    type='search' \r\n                    placeholder='search bots'\r\n                    onChange={this.onSearchChange} />\r\n                </div>\r\n                <Scroll>\r\n                    <CardList robots={updatebots} /> \r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './containers/App';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}